import React from "react";
import { useState, useEffect } from "react";
import { Menu, X } from "lucide-react";

function Navbar() {
  const [menuOpen, setMenuOpen] = useState(false);
  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);
  const [isDarkMode, setIsDarkMode] = useState(
    localStorage.getItem("darkMode") === "true"
  );

  const isReload = () => {
    window.location.reload();
  };

  //adds classname of dark for dark mode
  useEffect(() => {
    if (isDarkMode) {
      document.body.classList.add("dark");
    } else {
      document.body.classList.remove("dark");
    }
    localStorage.setItem("darkMode", isDarkMode);
  }, [isDarkMode]);

  useEffect(() => {
    const handleResize = () => setIsMobile(window.innerWidth < 768);
    window.addEventListener("resize", handleResize);

    if (!isMobile) setMenuOpen(false);

    return () => window.removeEventListener("resize", handleResize);
  }, [isMobile]);

  const ResumeRoute = () => {
    window.open(
      "https://drive.google.com/file/d/1TFGSA4vUx0toEmaZjnIWHsd-pirPS-BS/view?usp=sharing",
      "_blank"
    );
  };

  return (
    <section>
      <nav className="Navigation z-10">
        {/* Mobile Menu Button */}
        {isMobile && (
          <button
            className="menu-button"
            onClick={() => setMenuOpen(!menuOpen)}
            aria-label="Toggle Menu"
          >
            {menuOpen ? <X size={40} /> : <Menu size={40} />}
          </button>
        )}

        {/* NAV BAR LINKS */}
        <ul
          className={`nav-links flex flex-row fixed top-[1rem] right-[2rem] gap-20 font-pixel ${
            isMobile ? (menuOpen ? "open" : "hidden") : ""
          } ${isDarkMode ? "text-white" : "text-black"} `}
        >
          <li>
            <a href="#Home">HOME</a>
          </li>
          <li>
            <a href="#About">ABOUT</a>
          </li>
          <li>
            <a href="#Projects">PROJECTS</a>
          </li>
          <li>
            <a href="#Contact">CONTACT</a>
          </li>
        </ul>

        {/* RESUME BUTTON */}
        <div className="resumebtn fixed top-[2rem] left-[10rem] border-2 ">
          <button onClick={ResumeRoute} className="p-10">
            Resume{" "}
          </button>
        </div>
      </nav>

      {/* LOGO CHANGE */}
      <div className="logos">
        <svg
          width="76"
          height="76"
          viewBox="0 0 76 106"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          onClick={isReload}
        >
          <path
            d="M23.5938 63.3438V102.25C24.7188 102.396 25.8021 102.51 26.8438 102.594C27.8854 102.656 28.9062 102.688 29.9062 102.688C33.4271 102.688 36.5833 102.24 39.375 101.344C42.1667 100.427 44.5312 99.0521 46.4688 97.2188C48.4062 95.3646 49.8854 93.0625 50.9062 90.3125C51.9479 87.5417 52.4688 84.2917 52.4688 80.5625C52.4479 78.1042 52.1354 75.9271 51.5312 74.0312C50.9271 72.1354 50.0833 70.4896 49 69.0938C47.9167 67.6771 46.6354 66.5 45.1562 65.5625C43.6979 64.6042 42.1042 63.8333 40.375 63.25C38.6667 62.6458 36.8542 62.2188 34.9375 61.9688C33.0417 61.7188 31.1146 61.5938 29.1562 61.5938C28.2188 61.5938 27.2812 61.625 26.3438 61.6875C25.4062 61.75 24.4479 61.8333 23.4688 61.9375C23.5104 62.2292 23.5417 62.5 23.5625 62.75C23.5833 62.9792 23.5938 63.1771 23.5938 63.3438ZM13.1562 60.9062C14.9688 60.6771 16.5938 60.4792 18.0312 60.3125C19.4688 60.125 20.8646 59.9688 22.2188 59.8438C23.5729 59.7188 24.9688 59.625 26.4062 59.5625C27.8438 59.5 29.4688 59.4688 31.2812 59.4688C32.8438 59.4688 34.2708 59.5104 35.5625 59.5938C36.8542 59.6771 38.0729 59.8229 39.2188 60.0312C40.3854 60.2188 41.5208 60.4792 42.625 60.8125C43.75 61.125 44.9271 61.5104 46.1562 61.9688C47.8021 62.5938 49.3125 63.4375 50.6875 64.5C52.0833 65.5417 53.2812 66.8229 54.2812 68.3438C55.2812 69.8646 56.0521 71.6354 56.5938 73.6562C57.1562 75.6771 57.4375 77.9792 57.4375 80.5625C57.4167 83.625 57.0208 86.3542 56.25 88.75C55.4792 91.1458 54.4062 93.25 53.0312 95.0625C51.6562 96.875 50.0208 98.4167 48.125 99.6875C46.25 100.958 44.2083 101.99 42 102.781C39.7917 103.573 37.4583 104.146 35 104.5C32.5417 104.854 30.0521 105.031 27.5312 105.031C27.3229 105.031 26.6354 105.031 25.4688 105.031C24.3229 105.052 23.0938 105.115 21.7812 105.219C20.4688 105.323 19.3229 105.438 18.3438 105.562L18.1562 105.25C18.5729 104.646 18.7812 103.542 18.7812 101.938V69.0312C18.7812 67.6562 18.7188 66.5104 18.5938 65.5938C18.4688 64.6562 18.2396 63.9062 17.9062 63.3438C17.5729 62.7812 17.1042 62.3854 16.5 62.1562C15.8958 61.9062 15.3229 61.7812 14.7812 61.7812C14.2396 61.7812 13.8958 61.7812 13.75 61.7812C13.6042 61.7812 13.4479 61.7917 13.2812 61.8125L13.1562 60.9062Z"
            fill={isDarkMode ? "white" : "black"}
          />
          <path
            d="M3.008 81V80.36L7.488 79.528V41.512C7.488 40.5307 7.08267 39.5707 6.272 38.632C5.46133 37.6507 4.37333 36.8827 3.008 36.328V35.688H12.992L41.792 72.296H42.624V51.88C42.624 50.3867 42.496 48.9573 42.24 47.592C41.984 46.2267 41.5573 44.968 40.96 43.816C40.4053 42.6213 39.7013 41.5333 38.848 40.552C37.9947 39.5707 36.9707 38.7387 35.776 38.056C34.624 37.3307 33.3013 36.7547 31.808 36.328V35.688H48.448V36.328L43.584 37.16V81H39.616L9.28 42.6H8.448V61.928C8.448 63.72 8.576 65.4053 8.832 66.984C9.13067 68.52 9.57867 69.9707 10.176 71.336C10.7733 72.6587 11.5413 73.896 12.48 75.048C13.4187 76.1573 14.5493 77.16 15.872 78.056C17.1947 78.952 18.752 79.72 20.544 80.36V81H3.008Z"
            fill={isDarkMode ? "white" : "black"}
          />
          <path
            d="M34.9219 26.4219V70.7656C34.9219 73.1406 34.6719 75.4062 34.1719 77.5625C33.6719 79.6875 33.0781 81.4531 32.3906 82.8594C31.7031 84.2344 30.9375 85.5 30.0938 86.6562C29.25 87.8125 28.5469 88.6406 27.9844 89.1406C27.4531 89.6719 27.0156 90.0469 26.6719 90.2656C25.7969 90.7031 24.2969 90.9219 22.1719 90.9219C18.0781 90.9219 14.1719 89.8906 10.4531 87.8281C11.6094 85.7031 13.5625 83.6875 16.3125 81.7812L16.9688 82.2969C19.0312 85.6719 21.4688 87.3594 24.2812 87.3594C24.8438 87.3594 25.3281 87.2188 25.7344 86.9375C26.1406 86.625 26.4844 86.0625 26.7656 85.25C27.0781 84.4062 27.3125 83.4062 27.4688 82.25C27.6562 81.0625 27.8125 79.4688 27.9375 77.4688C28.0625 75.4375 28.1406 73.2188 28.1719 70.8125C28.2031 68.375 28.2188 65.375 28.2188 61.8125V35.0469C28.2188 30.9219 27.7656 28.0938 26.8594 26.5625C25.9531 25 24.0938 24.2188 21.2812 24.2188H19.9219L19.7344 23.3281C24.8906 21.7969 29.625 21.0312 33.9375 21.0312C34.5938 22.6875 34.9219 24.4844 34.9219 26.4219Z"
            fill={isDarkMode ? "white" : "black"}
          />
        </svg>
      </div>

      {/* TOGGLE BUTTON  */}
      <button
        className="toggle-btn fixed top-[1rem] left-[4rem]"
        onClick={() => setIsDarkMode(!isDarkMode)}
        style={{ border: "none", cursor: "pointer" }}
      >
        {/* Toggle Theme Mode button */}
        {isDarkMode ? (
          <svg
            width="50"
            height="50"
            viewBox="0 0 125 125"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M36.4583 93.75C27.7778 93.75 20.3993 90.7117 14.3229 84.6354C8.24652 78.5591 5.20831 71.1805 5.20831 62.5C5.20831 53.8195 8.24652 46.4409 14.3229 40.3646C20.3993 34.2883 27.7778 31.25 36.4583 31.25H88.5416C97.2221 31.25 104.601 34.2883 110.677 40.3646C116.753 46.4409 119.792 53.8195 119.792 62.5C119.792 71.1805 116.753 78.5591 110.677 84.6354C104.601 90.7117 97.2221 93.75 88.5416 93.75H36.4583ZM88.664 75.651C92.3151 75.651 95.4211 74.3732 97.9818 71.8177C100.542 69.2622 101.823 66.1589 101.823 62.5078C101.823 58.8568 100.545 55.7508 97.9896 53.1901C95.4341 50.6294 92.3307 49.349 88.6797 49.349C85.0286 49.349 81.9226 50.6268 79.362 53.1823C76.8013 55.7378 75.5208 58.8411 75.5208 62.4922C75.5208 66.1432 76.7987 69.2492 79.3541 71.8099C81.9096 74.3706 85.013 75.651 88.664 75.651Z"
              fill="white"
            />
          </svg>
        ) : (
          <svg
            width="50"
            height="50"
            viewBox="0 0 125 125"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M36.4583 93.75C27.7778 93.75 20.3993 90.7117 14.3229 84.6354C8.24652 78.5591 5.20831 71.1805 5.20831 62.5C5.20831 53.8195 8.24652 46.4409 14.3229 40.3646C20.3993 34.2883 27.7778 31.25 36.4583 31.25H88.5416C97.2221 31.25 104.601 34.2883 110.677 40.3646C116.753 46.4409 119.792 53.8195 119.792 62.5C119.792 71.1805 116.753 78.5591 110.677 84.6354C104.601 90.7117 97.2221 93.75 88.5416 93.75H36.4583ZM36.4583 85.9375H88.5416C95.0521 85.9375 100.586 83.6589 105.143 79.1016C109.701 74.5443 111.979 69.0104 111.979 62.5C111.979 55.9896 109.701 50.4557 105.143 45.8984C100.586 41.3411 95.0521 39.0625 88.5416 39.0625H36.4583C29.9479 39.0625 24.414 41.3411 19.8568 45.8984C15.2995 50.4557 13.0208 55.9896 13.0208 62.5C13.0208 69.0104 15.2995 74.5443 19.8568 79.1016C24.414 83.6589 29.9479 85.9375 36.4583 85.9375ZM36.3203 75.651C39.9713 75.651 43.0773 74.3732 45.638 71.8177C48.1987 69.2622 49.4791 66.1589 49.4791 62.5078C49.4791 58.8568 48.2013 55.7508 45.6458 53.1901C43.0903 50.6294 39.987 49.349 36.3359 49.349C32.6849 49.349 29.5789 50.6268 27.0182 53.1823C24.4575 55.7378 23.1771 58.8411 23.1771 62.4922C23.1771 66.1432 24.4548 69.2492 27.0104 71.8099C29.5659 74.3706 32.6693 75.651 36.3203 75.651Z"
              fill="black"
            />
          </svg>
        )}
      </button>
    </section>
  );
}

export default Navbar;
